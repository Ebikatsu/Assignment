領域の重なり具合がB5と同じ場合
・C言語版プログラムのリスト
#define B5
#include<stdio.h>
#include<stdlib.h>

#ifdef B5
int array[15] = {0,0,0,0,0,1,2,3,4,5,6,7,8,9,10};
#elif defined B6
int array[15] = {1,2,3,4,5,6,7,8,9,10,0,0,0,0,0};
#endif

int main(void)
{
	#ifdef B5
	int * const from = array + 5;
	int * const to = array;
	#elif defined B6
	int * const from = array;
	int * const to = array + 5;
	#endif
	int * i;
	if(from > to)for(i = array; i < array + 10; i++)*i = i[from - to];
	else for(i = array + 9; i >= array; i--)i[to - from] = *i;
	for(i = array; i < array + 15; i++)printf("%d\n", *i);
	return EXIT_SUCCESS;
}
・完成したプログラムのリスト
	.data
array:	.word	0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
enter:	.asciiz	"\n"
	.text
	.align	2
	.globl	main
main:
	li	$t3,5
	sll	$t4,$t3,2
	la	$t0,array
	addu	$t0,$t0,$t4
	la	$t1,array
	ble	$t0,$t1,else	#$t1(to)が$0(from)以上の場合はelseにジャンプし、課題B6と同じ処理をする。そうでない場合は、課題B5と同じ処理をする。
	la	$t2,array
	li	$t7,10
	sll	$t7,$t7,2
	la	$t6,array
	addu	$t6,$t6,$t7
loop1:
	move	$t4,$t2
	addu	$t4,$t4,$t0
	subu	$t4,$t4,$t1
	lw	$t5,0($t4)
	sw	$t5,0($t2)
	addiu	$t2,$t2,4
	blt	$t2,$t6,loop1
else:
	bgt	$t0,$t1,print
	li	$t5,9
	sll	$t5,$t5,2
	la	$t2,array
	addu	$t2,$t2,$t5
loop2:
	move	$t3,$t2
	addu	$t3,$t3,$t1
	subu	$t3,$t3,$t0
	lw	$t4,0($t2)
	sw	$t4,0($t3)
	addi	$t2,$t2,-4
	bge	$t2,$t0,loop2
print:
	la	$t2,array
	li	$t5,15
	sll	$t5,$t5,2
	la	$t4,array
	addu	$t4,$t4,$t5
loop3:
	lw	$t3,0($t2)
	move	$a0,$t3
	li	$v0,1
	syscall
	la	$a0,enter
	li	$v0,4
	syscall
	addiu	$t2,$t2,4
	blt	$t2,$t4,loop3
	li	$v0,10
	syscall
領域の重なり具合がB6と同じ場合
・C言語版プログラムのリスト
#define B6
#include<stdio.h>
#include<stdlib.h>

#ifdef B5
int array[15] = {0,0,0,0,0,1,2,3,4,5,6,7,8,9,10};
#elif defined B6
int array[15] = {1,2,3,4,5,6,7,8,9,10,0,0,0,0,0};
#endif

int main(void)
{
	#ifdef B5
	int * const from = array + 5;
	int * const to = array;
	#elif defined B6
	int * const from = array;
	int * const to = array + 5;
	#endif
	int * i;
	if(from > to)for(i = array; i < array + 10; i++)*i = i[from - to];
	else for(i = array + 9; i >= array; i--)i[to - from] = *i;
	for(i = array; i < array + 15; i++)printf("%d\n", *i);
	return EXIT_SUCCESS;
}
・完成したプログラムのリスト
	.data
array:	.word	1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 0, 0, 0, 0
enter:	.asciiz	"\n"
	.text
	.align	2
	.globl	main
main:
	li	$t2,5
	sll	$t2,$t2,2
	la	$t0,array
	la	$t1,array
	addu	$t1,$t1,$t2
	ble	$t0,$t1,else
	la	$t2,array
	li	$t7,10
	sll	$t7,$t7,2
	la	$t6,array
	addu	$t6,$t6,$t7
loop1:
	move	$t4,$t2
	addu	$t4,$t4,$t0
	subu	$t4,$t4,$t1
	lw	$t5,0($t4)
	sw	$t5,0($t2)
	addiu	$t2,$t2,4
	blt	$t2,$t6,loop1
else:
	bgt	$t0,$t1,print
	li	$t5,9
	sll	$t5,$t5,2
	la	$t2,array
	addu	$t2,$t2,$t5
loop2:
	move	$t3,$t2
	addu	$t3,$t3,$t1
	subu	$t3,$t3,$t0
	lw	$t4,0($t2)
	sw	$t4,0($t3)
	addi	$t2,$t2,-4
	bge	$t2,$t0,loop2
print:
	la	$t2,array
	li	$t5,15
	sll	$t5,$t5,2
	la	$t4,array
	addu	$t4,$t4,$t5
loop3:
	lw	$t3,0($t2)
	move	$a0,$t3
	li	$v0,1
	syscall
	la	$a0,enter
	li	$v0,4
	syscall
	addiu	$t2,$t2,4
	blt	$t2,$t4,loop3
	li	$v0,10
	syscall
・プログラムの説明
まずelseというラベルを作り、C言語版プログラムのfromにあたる$t0とtoにあたる$t1を比較し、toがfrom以上の場合はelseにジャンプする。elseにジャンプしなかった場合は課題B5と同じ方法で配列内のコピーを行い、elseにジャンプした場合は課題B6と同じ状態で配列内のコピーを行う。その後課題B5B6と同様に配列の内容を表示して終了する。
・実行結果、および、その実行結果の正しさの証明
領域の重なり具合がB5と同じ場合
1
2
3
4
5
6
7
8
9
10
6
7
8
9
10
であった。課題B5の結果と一致するため、実行結果は正しい。
領域の重なり具合がB6と同じ場合
1
2
3
4
5
1
2
3
4
5
6
7
8
9
10
であった。課題B6の結果と一致するため、実行結果は正しい。
