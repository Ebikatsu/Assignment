・C言語版プログラムのリスト
#include<stdio.h>
#include<stdlib.h>

int fact(int n);

int main(void)
{
	int i;
	for(i = 10; i >= 0; i--)printf("%d!=%d\n", i, fact(i));
	return EXIT_SUCCESS;
}

int fact(int n)
{
	if(n == 0)return 1;
	else return n * fact(n -1);
}
・完成したプログラムのリスト
	.data
facteq:	.asciiz	"!="
enter:	.asciiz	"\n"
	.text
	.align	2
	.globl	main
main:
	#$t0はi
	li	$t0,10
loop:
	move	$a0,$t0		#$t0を表示する。
	li	$v0,1
	syscall
	la	$a0,facteq	#文字列facteqを表示する。
	li	$v0,4
	syscall
	move	$a0,$t0
	addi	$sp,$sp,-8	#スタックに$t0と$raを積む。
	sw	$t0,4($sp)
	sw	$ra,0($sp)
	jal	fact		#サブルーチンfactを呼ぶ。
	lw	$ra,0($sp)	#スタックをもとに戻す。
	lw	$t0,4($sp)
	addi	$sp,$sp,8
	move	$a0,$v0		#階乗の結果を表示する。
	li	$v0,1
	syscall
	la	$a0,enter	#改行する。
	li	$v0,4
	syscall
	addi	$t0,$t0,-1
	bge	$t0,$zero,loop
	li	$v0,10		#終了する。
	syscall
fact:
	move $t0,$a0
	bne	$t0,$zero,else	#引数が0ならば1を返す。
	li	$v0,1
	j	$ra
else:				#引数が0でないならば引数を1減らして階乗を求めたものと引数をかけたものを返す。
	addi	$a0,$t0,-1
	addi	$sp,$sp,-8
	sw	$t0,4($sp)
	sw	$ra,0($sp)
	jal	fact
	lw	$ra,0($sp)
	lw	$t0,4($sp)
	addi	$sp,$sp,8
	mult	$t0,$v0
	mflo	$v0
	j	$ra
・プログラムの説明
まずmainラベルでは10から0までの階乗を表示するために$t0をカウンターとして繰り返し処理を実装した。その繰り返し処理の中で、$t0の値を表示し、文字列facteqを表示し、サブルーチンfactを呼び出すために$a0に引数として$t0を代入し、$t0と$raをスタックに積んでサブルーチンfactを呼ぶ。スタックをもとに戻した後、factの結果である$v0を表示し、改行して繰り返し処理の次に進み。繰り返し処理が最後まで終わったら終了する。サブルーチンfactでは、まず$a0が0でなければelseにジャンプし、そうでなければ返り値$v0に1を代入して呼び出し元に戻る。ラベルelseでは引数に1を引いてfactを呼び出し、$v0に$a0をかけて終了する。
・実行結果、および、その実行結果の正しさの証明
実行結果は、
10!=3628800
9!=362880
8!=40320
7!=5040
6!=720
5!=120
4!=24
3!=6
2!=2
1!=1
0!=1
であった。
