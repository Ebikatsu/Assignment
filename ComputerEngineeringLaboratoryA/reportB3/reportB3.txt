課題B3
・目的
標準入力（キーボード）から入力された非負整数を、オウム返しにそのまま表示するプログラムを作成する。
・C言語版プログラムのリスト
#include<stdio.h>

#include<stdlib.h>


int main(void)
{

	int x;

	do
	{

		printf(">");

		scanf("%d", &x);

		printf("%d\n", x);

	}while(x >= 0);

	return EXIT_SUCCESS;

}


・完成したプログラムのリスト
		.data
prompt:		.asciiz	">"
enterprompt:	.asciiz "\n>"
		.text
		.align	2
		.globl	main
main:
		#write prompt to stdout
		la	$a0,prompt
		li	$v0,4
		syscall
loop:
		#read int from stdin to $t0
		li	$v0,5
		syscall
		move	$t0,$v0
		#write $t0 to stdout
		move	$a0,$t0
		li	$v0,1
		syscall
		#write enterprompt to stdout
	la	$a0,enterprompt
		li	$v0,4
		syscall
		#break and exit
		li	$t1,-1
		slt	$t0,$t1,$t0
		li	$t1,1
		beq	$t0,$t1,loop
		move	$v0,$0
		j	$ra

・プログラムの説明
mainラベルにおいて、
2行目でレジスタa0に文字列prompt(">")の先頭アドレスを代入する。
3行目でシステムコールでa0の値を先頭アドレスとする文字列を表示するためにv0に4を代入する。
4行目でシステムコールで文字列">"を表示する。
ここでラベルloopに到達する。loopにおいて
2行目でシステムコールで整数を読み込むためにv0に5を代入する。
3行目でシステムコールで整数を読み込みv0に代入する。
4行目で読み込んだ値をt0に代入する。
6行目でt0の値を表示するためにt0の値をa0に代入する。
7行目でシステムコールでa0の値を表示するためにv0に1を代入する。
8行目でシステムコールでa0の値を表示する。
10行目でa0に文字列enterprompt("\n>")の先頭アドレスを代入する。
11行目でシステムコールで文字列を表示するためにv0に4を代入する。
12行目でシステムコールで文字列enterprompt("\n>")を表示する。
14行目でt0との比較対象としてt1に-1を代入する。
15行目でt0がt1(-1)より大きければ0を、そうでなければ1をt0に代入する。
16行目でt0との比較対象としてt1に1を代入する。
17行目で、t0がt1(1)と等しければラベルloopにジャンプする。
18行目でプログラムの返り値0をv0に代入する。
19行目でプログラムの呼び出し側にジャンプする。
・実行結果、および、その実行結果の正しさの説明
実行した結果、0以上の値を入力したときその数字が表示され、負の数が入力されたときにプログラムが終了した。
・考察
出力だけでなく、文字列や生巣の入力という機能もOSが実装していて、アセンブリからシステムコールによってその機能を呼び出すことができることが分かった。またさらに調べてみて、システムコールには入出力以外にも、プログラムの終了など、様々な機能が実装されていることが分かった。
